
.. _program_listing_file_src_translator_aggregate_batching_pool.h:

Program Listing for File aggregate_batching_pool.h
==================================================

|exhale_lsh| :ref:`Return to documentation for file <file_src_translator_aggregate_batching_pool.h>` (``src/translator/aggregate_batching_pool.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   #ifndef SRC_BERGAMOT_AGGREGATE_BATCHING_POOL_H_
   #define SRC_BERGAMOT_AGGREGATE_BATCHING_POOL_H_
   
   #include <memory>
   #include <queue>
   
   #include "data/types.h"
   #include "translation_model.h"
   
   namespace marian {
   namespace bergamot {
   
   template <class T>
   struct HashPtr {
     size_t operator()(const std::shared_ptr<T>& t) const {
       size_t address = reinterpret_cast<size_t>(t.get());
       return std::hash<size_t>()(address);
     }
   };
   
   //
   class AggregateBatchingPool {
    public:
     AggregateBatchingPool();
   
     size_t enqueueRequest(Ptr<TranslationModel> model, Ptr<Request> request);
   
     size_t generateBatch(Ptr<TranslationModel>& model, Batch& batch);
   
    private:
     std::unordered_set<std::shared_ptr<TranslationModel>, HashPtr<TranslationModel>> aggregateQueue_;
   };
   
   }  // namespace bergamot
   }  // namespace marian
   
   #endif  //  SRC_BERGAMOT_AGGREGATE_BATCHING_POOL_H_
